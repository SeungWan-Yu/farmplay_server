<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="userMapper">


    <sql id="selectBoardColumn">
        SELECT 
             userId
            ,userPw
            ,userName
            ,userPhone
            ,userAdress
            ,userAdressDetail
            ,userToken
            ,userFarmCode
            ,userFarmState
            ,userImg
            ,userRating
            ,userReviewCnt
            ,userProfileImg
            ,userRegDate
    </sql>    

    <!-- 유저 등록-->
    <insert id="addUser">
        INSERT INTO users
            ( userId
            , userPw
            , userName
            , userPhone
            , userAdress
            , userAdressDetail
            , userToken )
        VALUES 
            ( #{id}
            , #{pw}
            , #{name}
            , #{phone}
            , #{adress}
            , #{adressdetail}
            , #{token});
    </insert>

    <!-- 유저 업데이트-->
    <update id="updateUser">
        UPDATE users
        SET
            userName           = #{name},
            userPhone           = #{phone},
            userAdress         = #{adress},
            userAdressDetail  = #{adressdetail}
        WHERE 
            userId = #{id}
    </update>

    <!-- 유저이미지 및 리뷰정보 가져오기-->
    <select id="getUserImgRating">
        SELECT 
             userRating
            ,userReviewCnt
            ,userProfileImg 
        FROM 
            users 
        WHERE 
            userId = #{id};
    </select>

    <!-- 유저이미지 및 유저리뷰 농장리뷰가져오기-->
    <select id="getUserImgRatingFarm">
        SELECT
             u.userProfileImg
            ,f.farmCode 
            ,u.userRating
            ,u.userReviewCnt
            ,f.farmRating
            ,f.farmReviewCnt 
        FROM 
            users AS u 
        LEFT JOIN 
            farm AS f 
        ON 
            u.userId = f.userName 
        WHERE 
            u.userId = #{id};
    </select>


    <!-- 유저 로그인체크-->
    <select id="getLoginCheck">
        SELECT 
              userPw
            , userName
            , userFarmCode
            , userFarmState
        FROM 
            users
        WHERE
            userId = #{id};
    </select>

    <!-- 유저 로그인체크-->
    <select id="getSingupInfo">
        SELECT 
              userPw
            , userName
            , userPhone
            , userAdress
            , userAdressDetail
        FROM 
            users
        WHERE
            userId = #{id};
    </select>

    <!-- 유저 아이디중복체크-->
    <select id="getIdCheck">
        SELECT 
            count(*) AS count
        FROM
            users 
        WHERE
            userId = #{id}
            <if test="phone != null">
                AND
                userPhone = #{phone};	 
            </if>
    </select>

     <!-- 유저 연락처체크-->
    <select id="getPhoneCheck">
        SELECT 
            count(*) AS count
        FROM
            users 
        WHERE
            userPhone = #{phone};	 
        <if test="singupState == 'findPw'">
        AND
            userId = #{userId};	 
        </if>

    </select>

     <!-- 유저 비번 업데이트-->
    <update id="updateUserPw">
        UPDATE users
        SET
            userPw = #{pass}
        WHERE 
            userId = #{id};
    </update>


    <!-- 유저 토큰 업데이트-->
    <update id="updateUserToken">
        UPDATE users
        SET
            userToken = #{token}
        WHERE 
            userId = #{id};
    </update>

     <!-- 유저 이미지 업데이트-->
    <update id="updateUserImg">
        UPDATE users
        SET
            userProfileImg = #{userImg}
        WHERE 
            userId = #{userId};
    </update>

    <!-- 유저아이디 가져오기(연락처)-->
    <select id="getUserId">
        SELECT
	         userId
            ,userPhone

        FROM
	        users
        WHERE
	        userPhone = #{phone};
    </select>


    <!-- 유저 토큰 가져오기(연락처)-->
    <select id="getUserToken">
        SELECT
	         userToken
        FROM
	        users
        WHERE
	        userId = #{id};
    </select>

     <!-- 카카오유저 체크 -->
    <select id="getKaoUser">
         SELECT 
            count(*) AS count
        FROM
	        users
        WHERE
	        userId = #{kakaocode};
    </select>


    <!-- 인증체크 -->
    <select id="getCertificationCode">
         SELECT 
              phone
            , code
        FROM 
            certifi
        WHERE
        phone = #{phone};
    </select>
    
      <!-- 인증체크 -->
    <select id="getCertification">
         SELECT 
            count(*) AS count
        FROM 
            certifi
        WHERE
        phone = #{phone};
    </select>

    <!-- 인증정보 업데이트 -->
    <update id="updateCertification">
        UPDATE 
            certifi
        SET
		    code  = #{code}
	    WHERE 
	        phone = #{phone};
    </update>

    <!-- 인증정보 입력 -->
    <insert id="addCertification">
        INSERT INTO certifi
            ( phone
            , code)
	    VALUES
            ( #{phone}
             ,#{code});
    </insert>

</mapper>